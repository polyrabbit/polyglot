#!/usr/bin/env python
#coding: utf-8
import logging
import os
import sys

from docopt import docopt
from polyglot import DataBase, Classifier, __version__

USAGE="""Usage:
    {script} train CORPUS [-n INT] [-o OUTPUT] [-v | --verbose ]
    {script} classify FILE  [-n INT] [-s STATISTICS]
    {script} (-h | --help | --version)

Options:
    -n INT, --ngram=INT  The size of grams to use, the larger the better, but more expensive [default: 3].
    -o OUTPUT, --output=OUTPUT  File to store traing result (a single hyphen-minus (-) means stdin) [default: statistics.json].
    -s STATISTICS, --statistics=STATISTICS  File which holds the training result [default: statistics.json].
    -v, --verbose  Run in debug mode.
    CORPUS  The corpus folder for training [default: corpus].
    FILE  Input source code to classify (a single hyphen-minus (-) means stdin).

""".format(script=os.path.basename(__file__))

if __name__ == '__main__':
    args = docopt(USAGE, version=__version__)
    if args['--verbose']:
        from polyglot.classifier import logger
        logger.setLevel(logging.DEBUG)
    if args['train']:
        outstream = sys.stdout if args['--output']=='-' else open(args['--output'], 'w')
        db = DataBase(outstream)
        master = Classifier(db, int(args['--ngram']))
        master.train(args['CORPUS'] or './corpus')
    elif args['classify']:
        instream = sys.stdin if args['FILE']=='-' else open(args['FILE'])
        db = DataBase(open(args['--statistics']))
        master = Classifier(db, int(args['--ngram']))
        print master.classify(instream.read())[:3]
