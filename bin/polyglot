#!/usr/bin/env python
#coding: utf-8
import logging
import click

from polyglot.db import DataBase
from polyglot.classifier import Classifier

@click.group()
def cli():
    pass

@cli.command()
@click.argument('corpus', default='./corpus',
        help='The corpus folder for training.')
@click.option('-n', '--ngram', default=3, type=click.INT, metavar='<int>',
        help='The size of grams to use, the larger the better, but more expensive.')
@click.option('-v', '--verbose', is_flag=True, help='Run in debug mode.')
@click.option('-o', '--output', type=click.File('w'), default='-',
        help='File to store training result.')
def train(corpus, ngram, output, verbose):
    """Train polyglot from the corpus folder, each sub-folder represents a language
    which contains many files written in that language."""
    if verbose:
        from polyglot.classifier import logger
        logger.setLevel(logging.DEBUG)
    db = DataBase(output)
    master = Classifier(db, ngram)
    master.train(corpus)

@cli.command()
@click.argument('file', type=click.File('r'), default='-',
        help='Input source code to classify (or standard input if no files are named, or if a single hyphen-minus (-) is given as file name).')
@click.option('-n', '--ngram', default=3, type=click.INT,
        help='The size of grams to use, the larger the better, but more expensive.')
@click.option('-v', '--verbose', is_flag=True, help='Run in debug mode.')
@click.option('-s', '--statistics', type=click.File('r'), default='./statistics.json',
        help='File which holds the training result.')
def classify(file, statistics, ngram, verbose):
    """Tell which language the file is written with, based on the statistics result."""
    if verbose:
        from polyglot.classifier import logger
        logger.setLevel(logging.DEBUG)
    db = DataBase(statistics)
    master = Classifier(db, ngram)
    print master.classify(file.read())[:3]

if __name__ == '__main__':
    cli()
